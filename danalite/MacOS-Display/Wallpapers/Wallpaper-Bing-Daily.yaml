task: bing-daily-wallpaper
configs:
  op-interval: 0
  options: []
  shortcut: true
  hotkey: ''
  start-time: ''
actions:
  - >-
    web.http(GET, https://www.bing.com/HPImageArchive.aspx?format=js&idx=0&n=5)
    => $resp
  - >-
    data.read({{
    [{'label':'white','value':'https://papers.co/wallpaper/papers.co-mt01-winter-mountain-snow-bw-nature-white-35-3840x2160-4k-wallpaper.jpg'}]
    }}) => $set
  - cmd.for_each({{ $resp[images] }}) => $index, $image:
      - |-
        data.read({{ $set.__add__([
          { 'label': $image[title], 'value': 'https://www.bing.com' + $image[url] }
        ]) }}) => $set
  - |-
    user.input({{ {
      'title': 'Set a new wallpaper',
      'content': {
        'type': 'select',
        'label': 'Select a wallpaper',
        'key': 'wallpaper',
        'imagePreview': True,
        'content': $set
      },
      'icon': 'https://raw.githubusercontent.com/danalites/autoo/main/imgs/logo.png'
      }
    }}) => $answer
  - data.read({{ $answer[wallpaper] }}) => $selected
  - cmd.if({{ len($selected) > 0 }}:
      - web.http(DOWNLOAD, {{ $selected[0][value] }}) => $img
      - >-
        os.shell(osascript -e 'tell application "System Events" to tell every
        desktop to set picture to "{{ $img }}"')
  - cmd.if({{ len($selected) == 0 }}:
      - >-
        os.shell(osascript -e 'tell application "System Events" to tell every
        desktop to set picture to "NULL"')
